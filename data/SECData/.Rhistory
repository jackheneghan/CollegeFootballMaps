LSU <- add_state_codes(data = LSU_Raw)
MississippiSt <- add_state_codes(data = MississippiSt_Raw)
Missiouri <- add_state_codes(data = Missouri_Raw)
OleMiss <- add_state_codes(data = OleMiss_Raw)
SouthCarolina <- add_state_codes(data = SouthCarolina_Raw)
Tennessee <- add_state_codes(data = Tennessee_Raw)
TexasAM <- add_state_codes(data = TexasAM_Raw)
Vanderbilt <- add_state_codes(data = Vanderbilt_Raw)
## Data Visualization (GOVT16-QSS17) Fall 2016
## Introduction to R & RStudio
## Lab 3
##
## Name: Jack Heneghan
## Date: November 3rd, 2016
## INITIAL SETTING
rm(list = ls())
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(reshape2))
suppressPackageStartupMessages(library(openxlsx))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(rvest))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(ggmap))
suppressPackageStartupMessages(library(gdata))
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(stringi))
options(stringsAsFactors = FALSE)
abb <- state.abb
setwd("/Users/jack/Desktop/IvyData")
map <- map_data("state")
## IVY DATA
Dartmouth_Raw <- read.csv("DartmouthESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
Harvard_Raw <- read.csv("HarvardESPN.csv")
Harvard_Raw <- Harvard_Raw[1:110,] %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Brown_Raw <- read.csv("BrownESPN.csv") %>%
select(Column.65) %>%
rename(Hometown = Column.65) %>%
mutate(State = NA)
Yale_Raw <- read.csv("YaleESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Penn_Raw <- read.csv("PennESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Cornell_Raw <- read.csv("CornellESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Columbia_Raw <- read.csv("ColumbiaESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Princeton_Raw <- read.csv("PrincetonESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
add_state_codes <- function(data) {
for (y in data$Hometown) {
for (z in abb) {
if (grepl(z, y)) {
data$State[data$Hometown == y] <- z
}
}
}
return(data)
}
## ADD STATE CODES FOR IVY DATA
Dartmouth <- add_state_codes(data = Dartmouth_Raw)
Harvard <- add_state_codes(data = Harvard_Raw)
Yale <- add_state_codes(data = Yale_Raw)
Brown <- add_state_codes(data = Brown_Raw)
Penn <- add_state_codes(data = Penn_Raw)
Cornell <- add_state_codes(data = Cornell_Raw)
Columbia <- add_state_codes(data = Columbia_Raw)
Princeton <- add_state_codes(data = Princeton_Raw)
## AGGREGATE
Ivy <- bind_rows(Dartmouth, Harvard, Yale, Brown,
Penn, Cornell, Columbia, Princeton) %>%
filter(!is.na(State))
total <- nrow(Ivy)
Ivy <- Ivy %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
## FIGURE
map$region <- stri_trans_totitle(map$region)
map$State <- state.abb[match(map$region, state.name)]
data_final <- full_join(Ivy, map, by = "State")
ggplot() +
geom_polygon(data = data_final,
aes(x = long, y = lat, group = group, fill = Percentage),
color = "grey90") +
scale_fill_gradient(limits = c(0,50), low = "white", high = "black",
na.value = "grey90") +
coord_equal() +
theme_minimal() +
labs(title = paste("Ivy"),
x = "",
y = "",
fill = "Count")
## SEC DATA
setwd("/Users/jack/Desktop/SECData")
Alabama_Raw <- read.csv("AlabamaESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
load_data <- function(school_name) {
data <- read.csv(paste0(school_name, "ESPN.csv")) %>%
select(Column.78) %>%
rename(Hometown = Column.78) %>%
mutate(State = NA)
return(data)
}
Arkansas_Raw <- load_data(school_name = "Arkansas")
Auburn_Raw <- load_data(school_name = "Auburn")
Florida_Raw <- load_data(school_name = "Florida")
Georgia_Raw <- load_data(school_name = "Georgia")
Kentucky_Raw <- load_data(school_name = "Kentucky")
LSU_Raw <- load_data(school_name = "LSU")
MississippiSt_Raw <- load_data(school_name = "MississippiSt")
Missiouri_Raw <- load_data(school_name = "Missouri")
OleMiss_Raw <- load_data(school_name = "OleMiss")
SouthCarolina_Raw <- load_data(school_name = "SouthCarolina")
Tennessee_Raw <- load_data(school_name = "Tennessee")
TexasAM_Raw <- load_data(school_name = "TexasAM")
Vanderbilt_Raw <- load_data(school_name = "Vanderbilt")
## ADD STATE CODES FOR SEC DATA
Arkansas <- add_state_codes(data = Arkansas_Raw)
Auburn <- add_state_codes(data = Auburn_Raw)
Florida <- add_state_codes(data = Florida_Raw)
Georgia <- add_state_codes(data = Georgia_Raw)
Kentucky <- add_state_codes(data = Kentucky_Raw)
LSU <- add_state_codes(data = LSU_Raw)
MississippiSt <- add_state_codes(data = MississippiSt_Raw)
Missiouri <- add_state_codes(data = Missouri_Raw)
OleMiss <- add_state_codes(data = OleMiss_Raw)
SouthCarolina <- add_state_codes(data = SouthCarolina_Raw)
Tennessee <- add_state_codes(data = Tennessee_Raw)
TexasAM <- add_state_codes(data = TexasAM_Raw)
Vanderbilt <- add_state_codes(data = Vanderbilt_Raw)
Missouri_Raw <- load_data(school_name = "Missouri")
Missouri <- add_state_codes(data = Missouri_Raw)
Alabama <- add_state_codes(data = Alabama_Raw)
## AGGREGATE
SEC <- bind_rows(Alabama, Arkansas, Auburn, Florida,
Georgia, Kentucky, LSU, MississippiSt,
Missouri, OleMiss, SouthCarolina, Tennessee,
TexasAM, Vanderbilt) %>%
filter(!is.na(State))
total <- nrow(SEC)
SEC <- SEC %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
View(SEC)
## Data Visualization (GOVT16-QSS17) Fall 2016
## Introduction to R & RStudio
## Lab 3
##
## Name: Jack Heneghan
## Date: November 3rd, 2016
## INITIAL SETTING
rm(list = ls())
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(reshape2))
suppressPackageStartupMessages(library(openxlsx))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(rvest))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(ggmap))
suppressPackageStartupMessages(library(gdata))
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(stringi))
options(stringsAsFactors = FALSE)
abb <- state.abb
setwd("/Users/jack/Desktop/IvyData")
map <- map_data("state")
## LOAD IVY DATA
Dartmouth_Raw <- read.csv("DartmouthESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
Harvard_Raw <- read.csv("HarvardESPN.csv")
Harvard_Raw <- Harvard_Raw[1:110,] %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Brown_Raw <- read.csv("BrownESPN.csv") %>%
select(Column.65) %>%
rename(Hometown = Column.65) %>%
mutate(State = NA)
Yale_Raw <- read.csv("YaleESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Penn_Raw <- read.csv("PennESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Cornell_Raw <- read.csv("CornellESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Columbia_Raw <- read.csv("ColumbiaESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Princeton_Raw <- read.csv("PrincetonESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
add_state_codes <- function(data) {
for (y in data$Hometown) {
for (z in abb) {
if (grepl(z, y)) {
data$State[data$Hometown == y] <- z
}
}
}
return(data)
}
## ADD STATE CODES FOR IVY DATA
Dartmouth <- add_state_codes(data = Dartmouth_Raw)
Harvard <- add_state_codes(data = Harvard_Raw)
Yale <- add_state_codes(data = Yale_Raw)
Brown <- add_state_codes(data = Brown_Raw)
Penn <- add_state_codes(data = Penn_Raw)
Cornell <- add_state_codes(data = Cornell_Raw)
Columbia <- add_state_codes(data = Columbia_Raw)
Princeton <- add_state_codes(data = Princeton_Raw)
## AGGREGATE IVY DATA
Ivy <- bind_rows(Dartmouth, Harvard, Yale, Brown,
Penn, Cornell, Columbia, Princeton) %>%
filter(!is.na(State))
total <- nrow(Ivy)
Ivy <- Ivy %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
## LOAD SEC DATA
setwd("/Users/jack/Desktop/SECData")
Alabama_Raw <- read.csv("AlabamaESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
load_data <- function(school_name) {
data <- read.csv(paste0(school_name, "ESPN.csv")) %>%
select(Column.78) %>%
rename(Hometown = Column.78) %>%
mutate(State = NA)
return(data)
}
Arkansas_Raw <- load_data(school_name = "Arkansas")
Auburn_Raw <- load_data(school_name = "Auburn")
Florida_Raw <- load_data(school_name = "Florida")
Georgia_Raw <- load_data(school_name = "Georgia")
Kentucky_Raw <- load_data(school_name = "Kentucky")
LSU_Raw <- load_data(school_name = "LSU")
MississippiSt_Raw <- load_data(school_name = "MississippiSt")
Missouri_Raw <- load_data(school_name = "Missouri")
OleMiss_Raw <- load_data(school_name = "OleMiss")
SouthCarolina_Raw <- load_data(school_name = "SouthCarolina")
Tennessee_Raw <- load_data(school_name = "Tennessee")
TexasAM_Raw <- load_data(school_name = "TexasAM")
Vanderbilt_Raw <- load_data(school_name = "Vanderbilt")
## ADD STATE CODES FOR SEC DATA
Alabama <- add_state_codes(data = Alabama_Raw)
Arkansas <- add_state_codes(data = Arkansas_Raw)
Auburn <- add_state_codes(data = Auburn_Raw)
Florida <- add_state_codes(data = Florida_Raw)
Georgia <- add_state_codes(data = Georgia_Raw)
Kentucky <- add_state_codes(data = Kentucky_Raw)
LSU <- add_state_codes(data = LSU_Raw)
MississippiSt <- add_state_codes(data = MississippiSt_Raw)
Missouri <- add_state_codes(data = Missouri_Raw)
OleMiss <- add_state_codes(data = OleMiss_Raw)
SouthCarolina <- add_state_codes(data = SouthCarolina_Raw)
Tennessee <- add_state_codes(data = Tennessee_Raw)
TexasAM <- add_state_codes(data = TexasAM_Raw)
Vanderbilt <- add_state_codes(data = Vanderbilt_Raw)
## AGGREGATE SEC DATA
SEC <- bind_rows(Alabama, Arkansas, Auburn, Florida,
Georgia, Kentucky, LSU, MississippiSt,
Missouri, OleMiss, SouthCarolina, Tennessee,
TexasAM, Vanderbilt) %>%
filter(!is.na(State))
total <- nrow(SEC)
SEC <- SEC %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
## CREATE FIGURE
create_figure <- function(data, title) {
map$region <- stri_trans_totitle(map$region)
map$State <- state.abb[match(map$region, state.name)]
data_final <- full_join(data, map, by = "State")
g <- ggplot() +
geom_polygon(data = data_final,
aes(x = long, y = lat, group = group, fill = Percentage),
color = "grey90") +
scale_fill_gradient(limits = c(0,50), low = "white", high = "black",
na.value = "grey90") +
coord_equal() +
theme_minimal() +
labs(title = title,
x = "",
y = "",
fill = "Count")
return(g)
}
Ivy_Graph <- create_figure(data = Ivy, title = "Ivy")
SEC_Graph <- create_figure(data = SEC, title = "SEC")
final_graph <- grid.arrange(Ivy_Graph, SEC_Graph)
ggsave(filename = "FinalProject.pdf",
plot = final_graph, width = 10, height = 7.5)
View(Ivy)
## Data Visualization (GOVT16-QSS17) Fall 2016
## Introduction to R & RStudio
## Lab 3
##
## Name: Jack Heneghan
## Date: November 3rd, 2016
## INITIAL SETTING
rm(list = ls())
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(reshape2))
suppressPackageStartupMessages(library(openxlsx))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(lubridate))
suppressPackageStartupMessages(library(rvest))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(ggmap))
suppressPackageStartupMessages(library(gdata))
suppressPackageStartupMessages(library(sp))
suppressPackageStartupMessages(library(stringi))
options(stringsAsFactors = FALSE)
abb <- state.abb
setwd("/Users/jack/Desktop/IvyData")
map <- map_data("state")
## LOAD IVY DATA
Dartmouth_Raw <- read.csv("DartmouthESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
Harvard_Raw <- read.csv("HarvardESPN.csv")
Harvard_Raw <- Harvard_Raw[1:110,] %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Brown_Raw <- read.csv("BrownESPN.csv") %>%
select(Column.65) %>%
rename(Hometown = Column.65) %>%
mutate(State = NA)
Yale_Raw <- read.csv("YaleESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Penn_Raw <- read.csv("PennESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Cornell_Raw <- read.csv("CornellESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Columbia_Raw <- read.csv("ColumbiaESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
Princeton_Raw <- read.csv("PrincetonESPN.csv") %>%
select(Column.71) %>%
rename(Hometown = Column.71) %>%
mutate(State = NA)
add_state_codes <- function(data) {
for (y in data$Hometown) {
for (z in abb) {
if (grepl(z, y)) {
data$State[data$Hometown == y] <- z
}
}
}
return(data)
}
## ADD STATE CODES FOR IVY DATA
Dartmouth <- add_state_codes(data = Dartmouth_Raw)
Harvard <- add_state_codes(data = Harvard_Raw)
Yale <- add_state_codes(data = Yale_Raw)
Brown <- add_state_codes(data = Brown_Raw)
Penn <- add_state_codes(data = Penn_Raw)
Cornell <- add_state_codes(data = Cornell_Raw)
Columbia <- add_state_codes(data = Columbia_Raw)
Princeton <- add_state_codes(data = Princeton_Raw)
## AGGREGATE IVY DATA
Ivy <- bind_rows(Dartmouth, Harvard, Yale, Brown,
Penn, Cornell, Columbia, Princeton) %>%
filter(!is.na(State))
total <- nrow(Ivy)
Ivy <- Ivy %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
## LOAD SEC DATA
setwd("/Users/jack/Desktop/SECData")
Alabama_Raw <- read.csv("AlabamaESPN.csv") %>%
select(Column.64) %>%
rename(Hometown = Column.64) %>%
mutate(State = NA)
load_data <- function(school_name) {
data <- read.csv(paste0(school_name, "ESPN.csv")) %>%
select(Column.78) %>%
rename(Hometown = Column.78) %>%
mutate(State = NA)
return(data)
}
Arkansas_Raw <- load_data(school_name = "Arkansas")
Auburn_Raw <- load_data(school_name = "Auburn")
Florida_Raw <- load_data(school_name = "Florida")
Georgia_Raw <- load_data(school_name = "Georgia")
Kentucky_Raw <- load_data(school_name = "Kentucky")
LSU_Raw <- load_data(school_name = "LSU")
MississippiSt_Raw <- load_data(school_name = "MississippiSt")
Missouri_Raw <- load_data(school_name = "Missouri")
OleMiss_Raw <- load_data(school_name = "OleMiss")
SouthCarolina_Raw <- load_data(school_name = "SouthCarolina")
Tennessee_Raw <- load_data(school_name = "Tennessee")
TexasAM_Raw <- load_data(school_name = "TexasAM")
Vanderbilt_Raw <- load_data(school_name = "Vanderbilt")
## ADD STATE CODES FOR SEC DATA
Alabama <- add_state_codes(data = Alabama_Raw)
Arkansas <- add_state_codes(data = Arkansas_Raw)
Auburn <- add_state_codes(data = Auburn_Raw)
Florida <- add_state_codes(data = Florida_Raw)
Georgia <- add_state_codes(data = Georgia_Raw)
Kentucky <- add_state_codes(data = Kentucky_Raw)
LSU <- add_state_codes(data = LSU_Raw)
MississippiSt <- add_state_codes(data = MississippiSt_Raw)
Missouri <- add_state_codes(data = Missouri_Raw)
OleMiss <- add_state_codes(data = OleMiss_Raw)
SouthCarolina <- add_state_codes(data = SouthCarolina_Raw)
Tennessee <- add_state_codes(data = Tennessee_Raw)
TexasAM <- add_state_codes(data = TexasAM_Raw)
Vanderbilt <- add_state_codes(data = Vanderbilt_Raw)
## AGGREGATE SEC DATA
SEC <- bind_rows(Alabama, Arkansas, Auburn, Florida,
Georgia, Kentucky, LSU, MississippiSt,
Missouri, OleMiss, SouthCarolina, Tennessee,
TexasAM, Vanderbilt) %>%
filter(!is.na(State))
total <- nrow(SEC)
SEC <- SEC %>%
group_by(State) %>%
summarize(Count = n()) %>%
mutate(Percentage = 100 * (Count / total))
## CREATE FIGURE
create_figure <- function(data, title) {
map$region <- stri_trans_totitle(map$region)
map$State <- state.abb[match(map$region, state.name)]
data_final <- full_join(data, map, by = "State")
g <- ggplot() +
geom_polygon(data = data_final,
aes(x = long, y = lat, group = group, fill = Percentage),
color = "grey90") +
scale_fill_gradient(limits = c(0,20), low = "white", high = "black",
na.value = "grey90") +
coord_equal() +
theme_minimal() +
labs(title = title,
x = "",
y = "",
fill = "Count")
return(g)
}
Ivy_Graph <- create_figure(data = Ivy, title = "Ivy")
SEC_Graph <- create_figure(data = SEC, title = "SEC")
final_graph <- grid.arrange(Ivy_Graph, SEC_Graph)
ggsave(filename = "FinalProject.pdf",
plot = final_graph, width = 10, height = 7.5)
## CREATE FIGURE
create_figure <- function(data, title) {
map$region <- stri_trans_totitle(map$region)
map$State <- state.abb[match(map$region, state.name)]
data_final <- full_join(data, map, by = "State")
g <- ggplot() +
geom_polygon(data = data_final,
aes(x = long, y = lat, group = group, fill = Percentage),
color = "grey90") +
scale_fill_gradient(limits = c(0,20), low = "white", high = "black",
na.value = "grey90") +
coord_equal() +
theme_minimal() +
labs(title = paste("Geographic Backgrounds of",
title, "Football Athletes"),
x = "",
y = "",
fill = "Proportion of total\nplayers in league (%)")
return(g)
}
Ivy_Graph <- create_figure(data = Ivy, title = "Ivy League")
SEC_Graph <- create_figure(data = SEC, title = "SEC")
final_graph <- grid.arrange(Ivy_Graph, SEC_Graph)
ggsave(filename = "FinalProject.pdf",
plot = final_graph, width = 10, height = 7.5)
